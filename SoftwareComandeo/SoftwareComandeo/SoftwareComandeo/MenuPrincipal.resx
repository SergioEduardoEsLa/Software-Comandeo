<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCorteDeCaja.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnComanda.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>